# Example ostree-receive.conf file. All supported options with defaults are
# shown below. Install to ~/.config/ostree/ostree-receive.conf or
# /etc/ostree/ostree-receive.conf.

# Specify a repo root directory. When null or '', any repo path is allowed and
# paths are resolved relative to the current working directory. This is
# typically the user's home directory.
#root: null

# GPG key IDs for signing received commits and repo metadata.
#gpg_sign: []

# GnuPG home directory for loading GPG signing keys.
#gpg_homedir: null

# Whether to verify received commits with GPG.
#gpg_verify: no

# GPG keyring for verifying received commits. If null or '', keyrings at
# ~/.config/ostree/ostree-receive-trustedkeys.gpg or
# /etc/ostree/ostree-receive-trustedkeys.gpg will be used. OSTree will also
# use the global trusted keyrings in /usr/share/ostree/trusted.gpg.d.
#gpg_trustedkeys: null

# Signature implementation to use for OSTree's alternative, non-GPG signing
# system (used by the sign_* keys below). Also affects the format of the
# "keyfiles" in the subsequent settings.
# For ed25519 keys, the keyfiles described below should be files consisting of a
# series of base64-encoded keys, one key per line.
#sign_type: ed25519

# Keyfiles containing private keys for signing received commits and repo
# metadata, using the signing system set in sign_type.
#sign_keyfiles: []

# Whether to verify received commits with the signing system set in sign_type.
#sign_verify: no

# Keyfile containing public keys for verifying received commits, using the
# signing system set in sign_type. If null or '', the keyfile at
# ~/.config/ostree/ostree-receive-trustedkeyfile.SIGNTYPE or
# /etc/ostree/ostree-receive-trustedkeyfile.SIGNTYPE, where SIGNTYPE is the
# value of sign_type, will be used.
# For ed25519 signatures, OSTree will also use the global trusted keyfiles
# /usr/share/ostree/trusted.ed25519 and /etc/ostree/trusted.ed25519, as well as
# the keyfiles located within the directories
# /usr/share/ostree/trusted.ed25519.d and /etc/ostree/trusted.ed25519.d.
#sign_trustedkeyfile: null

# Update the repo metadata after receiving commits.
#update: yes

# Program to run after new commits have been made. The program will be
# executed with the environment variable OSTREE_RECEIVE_REPO set to the
# absolute path of the OSTree repository and the environment variable
# OSTREE_RECEIVE_REFS set to the set of refs received separated by
# whitespace.
#update_hook: null

# Set the log level. See https://docs.python.org/3/library/logging.html#levels
# for the list of log levels.
#log_level: INFO

# Force receiving commits even if nothing changed or the remote commits are
# not newer than the current commits.
#force: no

# Only show what would be done without making any commits.
#dry_run: no
